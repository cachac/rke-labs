# https://www.returngis.net/2020/05/aplicaciones-con-estado-en-kubernetes-con-statefulsets/
apiVersion: v1
kind: Service
metadata:
  name: mongodb-svc
  labels:
    app: storylabs-db
    name: mongodb
spec:
  clusterIP: None
  selector:
    app: storylabs-db
    name: mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-storylabs
spec:
  selector:
    matchLabels:
      app: storylabs-db
      name: mongodb
  serviceName: mongodb-svc #the name of the headless service
  replicas: 3
  template:
    metadata:
      labels:
        app: storylabs-db
        name: mongodb
    spec:
      terminationGracePeriodSeconds: 10 #This is important for databases
      containers:
      - name: mongo
        image: mongo # :4.2
        command: #https://docs.mongodb.com/manual/tutorial/deploy-replica-set/#start-each-member-of-the-replica-set-with-the-appropriate-options
          - mongod
        args:
          - --bind_ip=0.0.0.0
          - --replSet=rs0 #The name of the replica set that the mongod is part of. All hosts in the replica set must have the same set name.
          - --dbpath=/data/db
        livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        storageClassName: local-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 7Gi


