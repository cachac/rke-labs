#!/bin/bash -x

export TZ="America/Costa_Rica"
date +%z
date '+%Y/%m/%d %H:%M:%S %z' > /home/${username}/ilog
SECONDS=0
export DEBIAN_FRONTEND=noninteractive
# root
gcloud config set account  birdscodeinfo@gmail.com
gcloud auth activate-service-account --key-file /home/${username}/key.json
sudo usermod -aG sudo ${username}
echo -e "password\npassword\n" | passwd ${username}
# monitoring
# gcloud beta compute ssh kube-master01 --project=kubernetes-292714 --zone=us-central1-a --command="curl -sSO https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh && sudo bash add-monitoring-agent-repo.sh && sudo apt-get update && sudo apt-get install stackdriver-agent && sudo service stackdriver-agent start"
#
# Master: check ports
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

# microk8s
if ! command -v haproxy &> /dev/null; then
	sudo apt update
	sudo iptables -P FORWARD ACCEPT
	sudo apt install snapd

	sudo snap install microk8s --classic --channel=1.19/stable
	sudo microk8s status --wait-ready

	sudo mkdir /home/${username}/.kube
	sudo microk8s kubectl config view --raw > /home/${username}/.kube/config
	sudo snap install kubectl --classic
	sudo microk8s.enable ingress
	sudo microk8s enable dns

	# config
	runuser -l ${username} -c  "kubectl apply -f https://k8s.io/examples/application/deployment.yaml"
	runuser -l ${username} -c  "kubectl expose deployment nginx-deployment --port 80"

	runuser -l ${username} -c  "kubectl create namespace cert-manager"
	runuser -l ${username} -c  "kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.yaml"

	echo "[ -f ~/.kubectl_aliases ] && source <(cat ~/.kubectl_aliases | sed -r 's/(kubectl.*) --watch/watch \1/g')" >> /home/${username}/.bashrc
	echo 'function kubectl() { echo "+ kubectl $@">&2; command kubectl $@; }' >> /home/${username}/.bashrc
	echo "source <(kubectl completion bash)" >> /home/${username}/.bashrc
	runuser -l ${username} -c  'complete -F __start_kubectl k'

	# cert manager
	runuser -l ${username} -c "kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.yaml"
	runuser -l ${username} -c "kubectl apply -f staging_clusterIssuer.yaml"
	runuser -l ${username} -c "kubectl apply -f production_clusterIssuer.yaml"

	# deploy
done

# check
microk8s.inspect >> /home/${username}/ilog

# gcloud dns
# https://cert-manager.io/docs/configuration/acme/dns01/google/
# gcloud config set account  birdscodeinfo@gmail.com
# gcloud auth activate-service-account --key-file /home/${username}/key.json

# export PROJECT_ID=kubernetes-292714
# gcloud iam service-accounts create dns01-solver --display-name "dns01-solver"

# gcloud projects add-iam-policy-binding $PROJECT_ID \
#    --member serviceAccount:dns01-solver@$PROJECT_ID.iam.gserviceaccount.com \
#    --role roles/dns.admin

# gcloud iam service-accounts create dns01-solver

# gcloud iam service-accounts keys create key.json \
#    --iam-account dns01-solver@$PROJECT_ID.iam.gserviceaccount.com

# kubectl create secret generic clouddns-dns01-solver-svc-acct \
#    --from-file=key.json

# end
duration=$SECONDS
echo "$(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed."  >> /home/${username}/ilog
